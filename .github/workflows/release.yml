name: Publish
on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    - "v[0-9]+.[0-9]+.[0-9]+-preview[0-9]+"
jobs:
  test:
    runs-on: windows-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Build
      run: |
        dotnet build "Pick.Net.Utilities.Tests"  -c Release -p:WarningLevel=1
        dotnet build "Pick.Net.Utilities.Maui.SourceGenerators.Tests" -c Release -p:WarningLevel=1
    - name: Run Tests
      run: dotnet test -c Release --no-build
  build:
    runs-on: windows-latest
    timeout-minutes: 15
    needs: test
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    # - name: Verify commit exists in origin/main
    #   run: |
    #     git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
    #     git branch --remote --contains | grep origin/main
    - name: Get Version
      run: |
        $VERSION_FULL=$env:GITHUB_REF -replace 'refs/tags/v', ''
        $VERSION_SPLIT=$VERSION_FULL.Split('-', 2)
        $VERSION_PREFIX=$VERSION_SPLIT[0]
        if ($VERSION_SPLIT.Length -eq 2) {
          $VERSION_SUFFIX=$VERSION_SPLIT[1]
        }
        $HEAD_COUNT=git rev-list HEAD --count
        Write-Output "VERSION: $VERSION_FULL ($HEAD_COUNT)"
        echo "VERSION_FULL=$VERSION_FULL" >> $env:GITHUB_ENV
        echo "VERSION_PREFIX=$VERSION_PREFIX" >> $env:GITHUB_ENV
        echo "VERSION_SUFFIX=$VERSION_SUFFIX" >> $env:GITHUB_ENV
        echo "VERSION_FILE=$VERSION_PREFIX.$HEAD_COUNT" >> $env:GITHUB_ENV
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Build Pick.Net.Utilities
      run: dotnet build "Pick.Net.Utilities" -c Release -p:VersionPrefix="${{ env.VERSION_PREFIX }}" -p:VersionSuffix="${{ env.VERSION_SUFFIX }}" -p:FileVersion="${{ env.VERSION_FILE }}"
    - name: Build Pick.Net.Utilities.Maui
      run: dotnet build "Pick.Net.Utilities.Maui" -c Release -p:VersionPrefix="${{ env.VERSION_PREFIX }}" -p:VersionSuffix="${{ env.VERSION_SUFFIX }}" -p:FileVersion="${{ env.VERSION_FILE }}"
    - name: Pack
      run: |
        dotnet pack "Pick.Net.Utilities" -c Release --no-build -o .build -p:PackageVersion=${{ env.VERSION_FULL }}
        dotnet pack "Pick.Net.Utilities.Maui" -c Release --no-build -o .build -p:PackageVersion=${{ env.VERSION_FULL }}
    - name: Upload
      uses: actions/upload-artifact@v3.1.2
      with:
        name: build
        path: .build
    # - name: Push
    #   run: dotnet nuget push .build/${{ matrix.package }}.${{ env.VERSION_FULL }}.nupkg --source "https://api.nuget.org/v3/index.json" --api-key "${{ secrets.NUGET_TOKEN }}"
